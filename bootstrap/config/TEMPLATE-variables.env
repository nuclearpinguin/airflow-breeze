# Build variables. This file is sourced in BASH by ./run_environment.sh script.
# Also it is sourced during continuous integration build in Cloud Build

# Note that variables which names ends with _ENCRYPTED are encrypted using the
# following command and are decrypted on the flight and set to the original variable
# (without _ENCRYPTED suffix)
# echo -n ${VARIABLE} | \
#    gcloud kms encrypt --plaintext-file=- --ciphertext-file=- \
#    --location=global \
#    --keyring=airflow \
#    --key=airflow_crypto_key | base64


GCP_CONFIG_DIR=${GCP_CONFIG_DIR:=${HOME}/config}

# Unique suffix to allow several builds in parallel
AIRFLOW_BREEZE_SHORT_SHA=${AIRFLOW_BREEZE_SHORT_SHA:="build"}
AIRFLOW_BREEZE_TEST_SUITE=${AIRFLOW_BREEZE_TEST_SUITE:="test"}
AIRFLOW_BREEZE_UNIQUE_SUFFIX=${AIRFLOW_BREEZE_TEST_SUITE}-${AIRFLOW_BREEZE_SHORT_SHA}

#
# General variables
#
GCP_PROJECT_ID={{ GCP_PROJECT_ID }}
GCP_LOCATION=europe-west1
GCP_REGION=europe-west-1b
GCP_VALIDATE_BODY=True

BUILD_BUCKET_SUFFIX={{ BUILD_BUCKET_SUFFIX }}
TEST_BUCKET_SUFFIX={{ TEST_BUCKET_SUFFIX }}
AIRFLOW_BREEZE_GITHUB_ORGANIZATION={{ AIRFLOW_BREEZE_GITHUB_ORGANIZATION }}
AIRFLOW_REPO_NAME={{ AIRFLOW_REPO_NAME }}
SLACK_HOOK_ENCRYPTED={{ SLACK_HOOK_ENCRYPTED }}

AWS_ACCESS_KEY_ID_ENCRYPTED={{ AWS_ACCESS_KEY_ID_ENCRYPTED }}
AWS_SECRET_ACCESS_KEY_ENCRYPTED={{ AWS_SECRET_ACCESS_KEY_ENCRYPTED }}
AWS_DEFAULT_REGION={{ AWS_DEFAULT_REGION }}

# Buckets
AIRFLOW_BREEZE_GCP_BUILD_BUCKET=polidea-airflow${BUILD_BUCKET_SUFFIX}
AIRFLOW_BREEZE_GCP_TEST_BUCKET=polidea-airflow${TEST_BUCKET_SUFFIX}-${AIRFLOW_BREEZE_TEST_SUITE: -2}

#
# Google Cloud Function environment variables
#
GCF_SOURCE_ARCHIVE_URL=
GCF_SOURCE_UPLOAD_URL=
GCF_ZIP_PATH=
GCF_ENTRYPOINT=helloWorld
GCF_SHORT_FUNCTION_NAME=hello-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}
GCF_RUNTIME=nodejs6
#
# Google Compute Engine environment variables
#
GCE_INSTANCE=testinstance-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}
GCE_ZONE=europe-west1-b
GCE_SHORT_MACHINE_TYPE_NAME=n1-standard-1

#
# Google Compute Engine IGM environment variables
#
GCE_INSTANCE_GROUP_MANAGER_NAME=instance-group-test-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}
GCE_TEMPLATE_NAME=instance-template-test-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}
GCE_NEW_TEMPLATE_NAME=instance-template-test-new-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}
GCE_NEW_DESCRIPTION="Test new description ${AIRFLOW_BREEZE_UNIQUE_SUFFIX}"

#
# Google Cloud SQL environment variables
#
GCSQL_POSTGRES_INSTANCE_NAME=test-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}-post
GCSQL_POSTGRES_INSTANCE_NAME2=test-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}-post2
GCSQL_POSTGRES_INSTANCE_NAME_QUERY=test-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}-postquery
GCSQL_POSTGRES_DATABASE_NAME=postgresdb
GCSQL_POSTGRES_USER=postgres_user
GCSQL_POSTGRES_PASSWORD_ENCRYPTED={{ GCSQL_POSTGRES_PASSWORD_ENCRYPTED }}
GCSQL_POSTGRES_PUBLIC_PORT=5432
GCSQL_POSTGRES_CLIENT_CERT_FILE=/tmp/postgres-client-cert.pem
GCSQL_POSTGRES_CLIENT_KEY_FILE=/tmp/postgres-client-key.pem
GCSQL_POSTGRES_SERVER_CA_FILE=/tmp/postgres-server-ca.pem
GCSQL_POSTGRES_PUBLIC_IP_FILE=/tmp/postgres-ip.env
GCSQL_POSTGRES_EXPORT_URI=gs://${AIRFLOW_BREEZE_GCP_TEST_BUCKET}/postgres_export/${AIRFLOW_BREEZE_UNIQUE_SUFFIX}.txt
GCSQL_POSTGRES_IMPORT_URI=gs://${AIRFLOW_BREEZE_GCP_TEST_BUCKET}/postgres_export/${AIRFLOW_BREEZE_UNIQUE_SUFFIX}.txt

GCSQL_MYSQL_INSTANCE_NAME=test-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}-mysql
GCSQL_MYSQL_INSTANCE_NAME2=test-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}-mysql2
GCSQL_MYSQL_INSTANCE_NAME_QUERY=test-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}-mysqlquery
GCSQL_MYSQL_DATABASE_NAME=mysqldb
GCSQL_MYSQL_USER=mysql_user
GCSQL_MYSQL_PASSWORD_ENCRYPTED={{ GCSQL_MYSQL_PASSWORD_ENCRYPTED }}
GCSQL_MYSQL_PUBLIC_PORT=3306
GCSQL_MYSQL_CLIENT_CERT_FILE=/tmp/mysql-client-cert.pem
GCSQL_MYSQL_CLIENT_KEY_FILE=/tmp/mysql-client-key.pem
GCSQL_MYSQL_SERVER_CA_FILE=/tmp/mysql-server-ca.pem
GCSQL_MYSQL_PUBLIC_IP_FILE=/tmp/mysql-ip.env
GCSQL_MYSQL_EXPORT_URI=gs://${AIRFLOW_BREEZE_GCP_TEST_BUCKET}/mysql_export/${AIRFLOW_BREEZE_UNIQUE_SUFFIX}.txt
GCSQL_MYSQL_IMPORT_URI=gs://${AIRFLOW_BREEZE_GCP_TEST_BUCKET}/mysql_export/${AIRFLOW_BREEZE_UNIQUE_SUFFIX}.txt

#
# Google Cloud BigTable environment variables
#
CBT_INSTANCE_ID=test-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}
CBT_INSTANCE_DISPLAY_NAME="My CBT instance"
CBT_INSTANCE_TYPE=1 # PRODUCTION
CBT_INSTANCE_LABELS='{"key":"value"}'
CBT_CLUSTER_ID=cluster-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}
CBT_CLUSTER_ZONE=europe-west1-b
CBT_CLUSTER_NODES=3
CBT_CLUSTER_NODES_UPDATED=5
CBT_CLUSTER_STORAGE_TYPE=2 # HDD
CBT_TABLE_ID=my-cbt-table
CBT_POKE_INTERVAL=20

#
# Google Cloud Spanner environment variables
#
GCP_SPANNER_INSTANCE_ID=testinstance-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}
GCP_SPANNER_CONFIG_NAME=projects/${GCP_PROJECT_ID}/instanceConfigs/eur3
GCP_SPANNER_DATABASE_ID=testdatabase
GCP_SPANNER_NODE_COUNT=1
GCP_SPANNER_DISPLAY_NAME="Test Instance"

#
# Google Cloud Storage environment variables
#
GCS_ACL_BUCKET=${AIRFLOW_BREEZE_GCP_TEST_BUCKET}
GCS_ACL_OBJECT="empty.txt"
GCS_ACL_ENTITY="user-gcp-storage-account@${GCP_PROJECT_ID}.iam.gserviceaccount.com"
GCS_ACL_BUCKET_ROLE="WRITER"
GCS_ACL_OBJECT_ROLE="READER"

#
# Google Cloud Dataproc environment variables
#
GCP_DATAPROC_CLUSTER_NAME=cluster-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}

#
# Google Cloud Vision environment variables
#
GCP_VISION_LOCATION="europe-west1"
GCP_VISION_PRODUCT_SET_ID="product_set_explicit_id"
GCP_VISION_PRODUCT_ID="product_explicit_id"
GCP_VISION_REFERENCE_IMAGE_ID="reference_image_explicit_id"
GCP_VISION_BUCKET_NAME=${AIRFLOW_BREEZE_GCP_TEST_BUCKET}
GCP_VISION_ANNOTATE_IMAGE_URL=gs://${AIRFLOW_BREEZE_GCP_TEST_BUCKET}/image${AIRFLOW_BREEZE_UNIQUE_SUFFIX}.png
GCP_VISION_REFERENCE_IMAGE_URL=gs://${AIRFLOW_BREEZE_GCP_TEST_BUCKET}/image${AIRFLOW_BREEZE_UNIQUE_SUFFIX}.png

#
# Google Cloud Transfer storage buckets
#
GCP_TRANSFER_SOURCE_AWS_BUCKET="gcp-transfer-test-aws-source"
GCP_TRANSFER_FIRST_TARGET_BUCKET=gcp-transfer-test-first-target-${BUILD_BUCKET_SUFFIX}
GCP_TRANSFER_SECOND_TARGET_BUCKET=gcp-transfer-test-second-target-${BUILD_BUCKET_SUFFIX}

#
# Google Cloud Build environment variables
#
GCP_CLOUD_BUILD_REPOSITORY_NAME=breeze-cloud-build-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}-repo
GCP_CLOUD_BUILD_ARCHIVE_URL=gs://${AIRFLOW_BREEZE_GCP_TEST_BUCKET}/source-code-${AIRFLOW_BREEZE_UNIQUE_SUFFIX}-archive.tar.gz

# Tests to run in CI
AIRFLOW_BREEZE_CI_TEST_MODULES=" \
  tests.contrib.operators.test_gcp_compute_operator \
  tests.contrib.hooks.test_gcp_compute_hook \
  tests.contrib.operators.test_gcp_compute_operator_system \
  tests.contrib.operators.test_gcp_function_operator \
  tests.contrib.hooks.test_gcp_function_hook \
  tests.contrib.operators.test_gcp_function_operator_system \
  tests.contrib.operators.test_gcp_sql_operator \
  tests.contrib.hooks.test_gcp_sql_hook \
  tests.contrib.operators.test_gcp_sql_operator_system \
  tests.contrib.operators.test_gcp_spanner_operator \
  tests.contrib.hooks.test_gcp_spanner_hook \
  tests.contrib.operators.test_gcp_spanner_operator_system \
  tests.contrib.operators.test_gcp_bigtable_operator \
  tests.contrib.hooks.test_gcp_bigtable_hook \
  tests.contrib.operators.test_gcp_bigtable_operator_system \
  tests.contrib.operators.test_gcs_acl_operator \
  tests.contrib.hooks.test_gcs_hook \
  tests.contrib.operators.test_gcs_acl_operator_system \
  tests.contrib.hooks.test_gcp_vision_hook \
  tests.contrib.operators.test_gcp_vision_operator \
  tests.contrib.operators.test_gcp_vision_operator_system \
"
#  tests.contrib.operators.test_gcp_sql_operatorquery_system \

# Dags to link in environment automatically

AIRFLOW_BREEZE_DAGS_TO_TEST=" \
  airflow/contrib/example_dags/example_gcp* \
  airflow/contrib/example_dags/example_gcs* \
"
